package com.strategy;

import java.io.BufferedReader;
import java.io.InputStreamReader;

//https://refactoring.guru/design-patterns/strategy/java/example#:~:text=Strategy%20is%20a%20behavioral%20design,delegates%20it%20executing%20the%20behavior.
public class PayByCreditCard implements PayStrategy {

	private final BufferedReader READER = new BufferedReader(new InputStreamReader(System.in));
	private CreditCard card;

	/**
	 * Collect credit card data.
	 */
	@Override
	public void collectPaymentDetails() {
		
		try {
			
			System.out.print("Enter the card number: ");
			String number = READER.readLine();
			System.out.print("Enter the card expiration date 'mm/yy': ");
			String date = READER.readLine();
			System.out.print("Enter the CVV code: ");
            String cvv = READER.readLine();
            card = new CreditCard(number, date, cvv);
            
         // Validate credit card number...
			
		}catch (Exception e) {
			// TODO: handle exception
		}
		
	}

	 /**
     * After card validation we can charge customer's credit card.
     */
	@Override
	public boolean pay(int paymentAmount) {
		// TODO Auto-generated method stub
		return false;
	}

	private boolean cardIsPresent() {
        return card != null;
    }
}
